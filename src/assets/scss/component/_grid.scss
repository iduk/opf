//
// grid template
//

// grid set
// %grid-col {
//   position: relative;
//   box-sizing: border-box;
//   width: 100%;
//   max-width: 100%;
//   padding-right: calc($grid-gutter / 2);
//   padding-left: calc($grid-gutter / 2);
// }
// .col,
// [class*='col-'] {
//   @extend %grid-col;
// }

// .g-row {
//   width: 100%;
//   display: grid;
//   grid-template-columns: repeat($grid-cols, minmax(0, 1fr));

//   // margin-left: calc($grid-gutter / -2);
//   // margin-right: calc($grid-gutter / -2);

//   &.no-gutters {
//     margin-right: 0;
//     margin-left: 0;
//     > .col,
//     > [class*='col-'] {
//       padding-right: 0;
//       padding-left: 0;
//     }
//   }
// }

// @mixin grid-columns($bp: null) {
//   $infix: if($bp == null, '', '-#{$bp}');

//   .col,
//   .col#{$infix}-auto {
//     grid-column-end: auto;
//   }

//   @for $i from 1 through $grid-cols {
//     .col#{$infix}-#{$i} {
//       grid-column-end: span $i;
//     }
//     .offset#{$infix}-#{$i} {
//       grid-column-start: $i + 1;
//     }
//     .row#{$infix}-#{$i} {
//       grid-row-end: span $i;
//     }
//     .row-offset#{$infix}-#{$i} {
//       grid-row-start: $i + 1;
//     }
//   }
// }
// @each $bp, $w in $grid-breakpoints {
//   @if $bp == 'xs' {
//     @include grid-columns;
//   } @else {
//     @media (min-width: $w) {
//       @include grid-columns($bp);
//     }
//   }
// }

// flex grid
//
.g-row {
  display: flex;
  flex-wrap: wrap;
  box-sizing: border-box;
  flex: 0 1 auto;
  margin-right: calc($grid-gutter / -2);
  margin-left: calc($grid-gutter / -2);
  > * {
    flex-shrink: 0;
    position: relative;
    width: 100%;
    max-width: 100%;
    padding-right: calc($grid-gutter * 0.5);
    padding-left: calc($grid-gutter * 0.5);
  }
}

.no-gutters {
  margin-right: 0;
  margin-left: 0;
  > * {
    padding-right: 0;
    padding-left: 0;
  }
}

[class^='col'] {
  display: block;
  flex: 1 0 0%;
}

@mixin grid-columns($bp: null) {
  $infix: if($bp == null, '', '-#{$bp}');

  @for $i from 1 through $grid-cols {
    .col#{$infix}-#{$i} {
      flex: 0 0 auto;
      flex-basis: calc(100 / ($grid-cols / $i) * 1%);
    }
    .offset#{$infix}-#{$i} {
      margin-left: calc(100 / ($grid-cols / $i) * 1%);
    }
  }
  .col#{$infix}-auto {
    flex: 1 0 0;
  }

  .offset#{$infix}-0 {
    margin-left: 0;
  }
  // hidden-[*]
  .hidden#{$infix} {
    display: none !important;
  }
}
@include grid-columns;

@each $bp, $w in $grid-breakpoints {
  @media screen and (min-width: $w) {
    @include grid-columns($bp);
  }
}
